/**
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateUserConflictResponse_errors_inner.h
 *
 * 
 */

#ifndef COM_ONESIGNAL_CLIENT_MODEL_CreateUserConflictResponse_errors_inner_H_
#define COM_ONESIGNAL_CLIENT_MODEL_CreateUserConflictResponse_errors_inner_H_


#include "CppRestOneSignalAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOneSignalAPIClient/model/CreateUserConflictResponse_errorsItems_meta.h"

namespace com {
namespace onesignal {
namespace client {
namespace model {

class CreateUserConflictResponse_errorsItems_meta;

/// <summary>
/// 
/// </summary>
class  CreateUserConflictResponse_errors_inner
    : public ModelBase
{
public:
    CreateUserConflictResponse_errors_inner();
    virtual ~CreateUserConflictResponse_errors_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateUserConflictResponse_errors_inner members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCode() const;
    bool codeIsSet() const;
    void unsetCode();

    void setCode(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();

    void setTitle(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreateUserConflictResponse_errorsItems_meta> getMeta() const;
    bool metaIsSet() const;
    void unsetMeta();

    void setMeta(const std::shared_ptr<CreateUserConflictResponse_errorsItems_meta>& value);


protected:
    utility::string_t m_Code;
    bool m_CodeIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    std::shared_ptr<CreateUserConflictResponse_errorsItems_meta> m_Meta;
    bool m_MetaIsSet;
};


}
}
}
}

#endif /* COM_ONESIGNAL_CLIENT_MODEL_CreateUserConflictResponse_errors_inner_H_ */
