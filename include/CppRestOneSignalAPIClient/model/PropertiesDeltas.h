/**
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PropertiesDeltas.h
 *
 * 
 */

#ifndef COM_ONESIGNAL_CLIENT_MODEL_PropertiesDeltas_H_
#define COM_ONESIGNAL_CLIENT_MODEL_PropertiesDeltas_H_


#include "CppRestOneSignalAPIClient/ModelBase.h"

#include "CppRestOneSignalAPIClient/model/Purchase.h"
#include <vector>

namespace com {
namespace onesignal {
namespace client {
namespace model {

class Purchase;

/// <summary>
/// 
/// </summary>
class  PropertiesDeltas
    : public ModelBase
{
public:
    PropertiesDeltas();
    virtual ~PropertiesDeltas();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PropertiesDeltas members

    /// <summary>
    /// 
    /// </summary>
    double getSessionTime() const;
    bool sessionTimeIsSet() const;
    void unsetSession_time();

    void setSessionTime(double value);

    /// <summary>
    /// 
    /// </summary>
    double getSessionCount() const;
    bool sessionCountIsSet() const;
    void unsetSession_count();

    void setSessionCount(double value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Purchase>>& getPurchases();
    bool purchasesIsSet() const;
    void unsetPurchases();

    void setPurchases(const std::vector<std::shared_ptr<Purchase>>& value);


protected:
    double m_Session_time;
    bool m_Session_timeIsSet;
    double m_Session_count;
    bool m_Session_countIsSet;
    std::vector<std::shared_ptr<Purchase>> m_Purchases;
    bool m_PurchasesIsSet;
};


}
}
}
}

#endif /* COM_ONESIGNAL_CLIENT_MODEL_PropertiesDeltas_H_ */
