/**
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Purchase.h
 *
 * 
 */

#ifndef COM_ONESIGNAL_CLIENT_MODEL_Purchase_H_
#define COM_ONESIGNAL_CLIENT_MODEL_Purchase_H_


#include "CppRestOneSignalAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace onesignal {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Purchase
    : public ModelBase
{
public:
    Purchase();
    virtual ~Purchase();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Purchase members

    /// <summary>
    /// The unique identifier of the purchased item.
    /// </summary>
    utility::string_t getSku() const;
    bool skuIsSet() const;
    void unsetSku();

    void setSku(const utility::string_t& value);

    /// <summary>
    /// The amount, in USD, spent purchasing the item.
    /// </summary>
    utility::string_t getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(const utility::string_t& value);

    /// <summary>
    /// The 3-letter ISO 4217 currency code. Required for correct storage and conversion of amount.
    /// </summary>
    utility::string_t getIso() const;
    bool isoIsSet() const;
    void unsetIso();

    void setIso(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    double getCount() const;
    bool countIsSet() const;
    void unsetCount();

    void setCount(double value);


protected:
    utility::string_t m_Sku;
    bool m_SkuIsSet;
    utility::string_t m_Amount;
    bool m_AmountIsSet;
    utility::string_t m_Iso;
    bool m_IsoIsSet;
    double m_Count;
    bool m_CountIsSet;
};


}
}
}
}

#endif /* COM_ONESIGNAL_CLIENT_MODEL_Purchase_H_ */
