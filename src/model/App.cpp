/**
 * OneSignal
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: devrel@onesignal.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOneSignalAPIClient/model/App.h"

namespace com {
namespace onesignal {
namespace client {
namespace model {



App::App()
{
    m_Id = utility::conversions::to_string_t("");
    m_IdIsSet = false;
    m_Name = utility::conversions::to_string_t("");
    m_NameIsSet = false;
    m_Players = 0;
    m_PlayersIsSet = false;
    m_Messageable_players = 0;
    m_Messageable_playersIsSet = false;
    m_Updated_at = utility::datetime();
    m_Updated_atIsSet = false;
    m_Created_at = utility::datetime();
    m_Created_atIsSet = false;
    m_Android_gcm_sender_id = utility::conversions::to_string_t("");
    m_Android_gcm_sender_idIsSet = false;
    m_Gcm_key = utility::conversions::to_string_t("");
    m_Gcm_keyIsSet = false;
    m_Chrome_web_origin = utility::conversions::to_string_t("");
    m_Chrome_web_originIsSet = false;
    m_Chrome_key = utility::conversions::to_string_t("");
    m_Chrome_keyIsSet = false;
    m_Chrome_web_default_notification_icon = utility::conversions::to_string_t("");
    m_Chrome_web_default_notification_iconIsSet = false;
    m_Chrome_web_sub_domain = utility::conversions::to_string_t("");
    m_Chrome_web_sub_domainIsSet = false;
    m_Apns_env = utility::conversions::to_string_t("");
    m_Apns_envIsSet = false;
    m_Apns_p12 = utility::conversions::to_string_t("");
    m_Apns_p12IsSet = false;
    m_Apns_p12_password = utility::conversions::to_string_t("");
    m_Apns_p12_passwordIsSet = false;
    m_Apns_certificates = utility::conversions::to_string_t("");
    m_Apns_certificatesIsSet = false;
    m_Safari_apns_certificates = utility::conversions::to_string_t("");
    m_Safari_apns_certificatesIsSet = false;
    m_Safari_apns_p12 = utility::conversions::to_string_t("");
    m_Safari_apns_p12IsSet = false;
    m_Safari_apns_p12_password = utility::conversions::to_string_t("");
    m_Safari_apns_p12_passwordIsSet = false;
    m_Apns_key_id = utility::conversions::to_string_t("");
    m_Apns_key_idIsSet = false;
    m_Apns_team_id = utility::conversions::to_string_t("");
    m_Apns_team_idIsSet = false;
    m_Apns_bundle_id = utility::conversions::to_string_t("");
    m_Apns_bundle_idIsSet = false;
    m_Apns_p8 = utility::conversions::to_string_t("");
    m_Apns_p8IsSet = false;
    m_Safari_site_origin = utility::conversions::to_string_t("");
    m_Safari_site_originIsSet = false;
    m_Safari_push_id = utility::conversions::to_string_t("");
    m_Safari_push_idIsSet = false;
    m_Safari_icon_16_16 = utility::conversions::to_string_t("");
    m_Safari_icon_16_16IsSet = false;
    m_Safari_icon_32_32 = utility::conversions::to_string_t("");
    m_Safari_icon_32_32IsSet = false;
    m_Safari_icon_64_64 = utility::conversions::to_string_t("");
    m_Safari_icon_64_64IsSet = false;
    m_Safari_icon_128_128 = utility::conversions::to_string_t("");
    m_Safari_icon_128_128IsSet = false;
    m_Safari_icon_256_256 = utility::conversions::to_string_t("");
    m_Safari_icon_256_256IsSet = false;
    m_Site_name = utility::conversions::to_string_t("");
    m_Site_nameIsSet = false;
    m_Basic_auth_key = utility::conversions::to_string_t("");
    m_Basic_auth_keyIsSet = false;
    m_Organization_id = utility::conversions::to_string_t("");
    m_Organization_idIsSet = false;
    m_Additional_data_is_root_payload = false;
    m_Additional_data_is_root_payloadIsSet = false;
}

App::~App()
{
}

void App::validate()
{
    // TODO: implement validation
}

web::json::value App::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_IdIsSet)
    {
        val[utility::conversions::to_string_t(U("id"))] = ModelBase::toJson(m_Id);
    }
    if(m_NameIsSet)
    {
        val[utility::conversions::to_string_t(U("name"))] = ModelBase::toJson(m_Name);
    }
    if(m_PlayersIsSet)
    {
        val[utility::conversions::to_string_t(U("players"))] = ModelBase::toJson(m_Players);
    }
    if(m_Messageable_playersIsSet)
    {
        val[utility::conversions::to_string_t(U("messageable_players"))] = ModelBase::toJson(m_Messageable_players);
    }
    if(m_Updated_atIsSet)
    {
        val[utility::conversions::to_string_t(U("updated_at"))] = ModelBase::toJson(m_Updated_at);
    }
    if(m_Created_atIsSet)
    {
        val[utility::conversions::to_string_t(U("created_at"))] = ModelBase::toJson(m_Created_at);
    }
    if(m_Android_gcm_sender_idIsSet)
    {
        val[utility::conversions::to_string_t(U("android_gcm_sender_id"))] = ModelBase::toJson(m_Android_gcm_sender_id);
    }
    if(m_Gcm_keyIsSet)
    {
        val[utility::conversions::to_string_t(U("gcm_key"))] = ModelBase::toJson(m_Gcm_key);
    }
    if(m_Chrome_web_originIsSet)
    {
        val[utility::conversions::to_string_t(U("chrome_web_origin"))] = ModelBase::toJson(m_Chrome_web_origin);
    }
    if(m_Chrome_keyIsSet)
    {
        val[utility::conversions::to_string_t(U("chrome_key"))] = ModelBase::toJson(m_Chrome_key);
    }
    if(m_Chrome_web_default_notification_iconIsSet)
    {
        val[utility::conversions::to_string_t(U("chrome_web_default_notification_icon"))] = ModelBase::toJson(m_Chrome_web_default_notification_icon);
    }
    if(m_Chrome_web_sub_domainIsSet)
    {
        val[utility::conversions::to_string_t(U("chrome_web_sub_domain"))] = ModelBase::toJson(m_Chrome_web_sub_domain);
    }
    if(m_Apns_envIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_env"))] = ModelBase::toJson(m_Apns_env);
    }
    if(m_Apns_p12IsSet)
    {
        val[utility::conversions::to_string_t(U("apns_p12"))] = ModelBase::toJson(m_Apns_p12);
    }
    if(m_Apns_p12_passwordIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_p12_password"))] = ModelBase::toJson(m_Apns_p12_password);
    }
    if(m_Apns_certificatesIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_certificates"))] = ModelBase::toJson(m_Apns_certificates);
    }
    if(m_Safari_apns_certificatesIsSet)
    {
        val[utility::conversions::to_string_t(U("safari_apns_certificates"))] = ModelBase::toJson(m_Safari_apns_certificates);
    }
    if(m_Safari_apns_p12IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_apns_p12"))] = ModelBase::toJson(m_Safari_apns_p12);
    }
    if(m_Safari_apns_p12_passwordIsSet)
    {
        val[utility::conversions::to_string_t(U("safari_apns_p12_password"))] = ModelBase::toJson(m_Safari_apns_p12_password);
    }
    if(m_Apns_key_idIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_key_id"))] = ModelBase::toJson(m_Apns_key_id);
    }
    if(m_Apns_team_idIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_team_id"))] = ModelBase::toJson(m_Apns_team_id);
    }
    if(m_Apns_bundle_idIsSet)
    {
        val[utility::conversions::to_string_t(U("apns_bundle_id"))] = ModelBase::toJson(m_Apns_bundle_id);
    }
    if(m_Apns_p8IsSet)
    {
        val[utility::conversions::to_string_t(U("apns_p8"))] = ModelBase::toJson(m_Apns_p8);
    }
    if(m_Safari_site_originIsSet)
    {
        val[utility::conversions::to_string_t(U("safari_site_origin"))] = ModelBase::toJson(m_Safari_site_origin);
    }
    if(m_Safari_push_idIsSet)
    {
        val[utility::conversions::to_string_t(U("safari_push_id"))] = ModelBase::toJson(m_Safari_push_id);
    }
    if(m_Safari_icon_16_16IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_icon_16_16"))] = ModelBase::toJson(m_Safari_icon_16_16);
    }
    if(m_Safari_icon_32_32IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_icon_32_32"))] = ModelBase::toJson(m_Safari_icon_32_32);
    }
    if(m_Safari_icon_64_64IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_icon_64_64"))] = ModelBase::toJson(m_Safari_icon_64_64);
    }
    if(m_Safari_icon_128_128IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_icon_128_128"))] = ModelBase::toJson(m_Safari_icon_128_128);
    }
    if(m_Safari_icon_256_256IsSet)
    {
        val[utility::conversions::to_string_t(U("safari_icon_256_256"))] = ModelBase::toJson(m_Safari_icon_256_256);
    }
    if(m_Site_nameIsSet)
    {
        val[utility::conversions::to_string_t(U("site_name"))] = ModelBase::toJson(m_Site_name);
    }
    if(m_Basic_auth_keyIsSet)
    {
        val[utility::conversions::to_string_t(U("basic_auth_key"))] = ModelBase::toJson(m_Basic_auth_key);
    }
    if(m_Organization_idIsSet)
    {
        val[utility::conversions::to_string_t(U("organization_id"))] = ModelBase::toJson(m_Organization_id);
    }
    if(m_Additional_data_is_root_payloadIsSet)
    {
        val[utility::conversions::to_string_t(U("additional_data_is_root_payload"))] = ModelBase::toJson(m_Additional_data_is_root_payload);
    }

    return val;
}

bool App::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setId);
            setId(refVal_setId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("name"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("name")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setName;
            ok &= ModelBase::fromJson(fieldValue, refVal_setName);
            setName(refVal_setName);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("players"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("players")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setPlayers;
            ok &= ModelBase::fromJson(fieldValue, refVal_setPlayers);
            setPlayers(refVal_setPlayers);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("messageable_players"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("messageable_players")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setMessageablePlayers;
            ok &= ModelBase::fromJson(fieldValue, refVal_setMessageablePlayers);
            setMessageablePlayers(refVal_setMessageablePlayers);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("updated_at"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("updated_at")));
        if(!fieldValue.is_null())
        {
            utility::datetime refVal_setUpdatedAt;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUpdatedAt);
            setUpdatedAt(refVal_setUpdatedAt);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("created_at"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("created_at")));
        if(!fieldValue.is_null())
        {
            utility::datetime refVal_setCreatedAt;
            ok &= ModelBase::fromJson(fieldValue, refVal_setCreatedAt);
            setCreatedAt(refVal_setCreatedAt);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("android_gcm_sender_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("android_gcm_sender_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setAndroidGcmSenderId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAndroidGcmSenderId);
            setAndroidGcmSenderId(refVal_setAndroidGcmSenderId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("gcm_key"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("gcm_key")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setGcmKey;
            ok &= ModelBase::fromJson(fieldValue, refVal_setGcmKey);
            setGcmKey(refVal_setGcmKey);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("chrome_web_origin"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("chrome_web_origin")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setChromeWebOrigin;
            ok &= ModelBase::fromJson(fieldValue, refVal_setChromeWebOrigin);
            setChromeWebOrigin(refVal_setChromeWebOrigin);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("chrome_key"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("chrome_key")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setChromeKey;
            ok &= ModelBase::fromJson(fieldValue, refVal_setChromeKey);
            setChromeKey(refVal_setChromeKey);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("chrome_web_default_notification_icon"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("chrome_web_default_notification_icon")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setChromeWebDefaultNotificationIcon;
            ok &= ModelBase::fromJson(fieldValue, refVal_setChromeWebDefaultNotificationIcon);
            setChromeWebDefaultNotificationIcon(refVal_setChromeWebDefaultNotificationIcon);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("chrome_web_sub_domain"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("chrome_web_sub_domain")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setChromeWebSubDomain;
            ok &= ModelBase::fromJson(fieldValue, refVal_setChromeWebSubDomain);
            setChromeWebSubDomain(refVal_setChromeWebSubDomain);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_env"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_env")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsEnv;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsEnv);
            setApnsEnv(refVal_setApnsEnv);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_p12"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_p12")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsP12;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsP12);
            setApnsP12(refVal_setApnsP12);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_p12_password"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_p12_password")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsP12Password;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsP12Password);
            setApnsP12Password(refVal_setApnsP12Password);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_certificates"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_certificates")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsCertificates;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsCertificates);
            setApnsCertificates(refVal_setApnsCertificates);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_apns_certificates"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_apns_certificates")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariApnsCertificates;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariApnsCertificates);
            setSafariApnsCertificates(refVal_setSafariApnsCertificates);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_apns_p12"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_apns_p12")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariApnsP12;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariApnsP12);
            setSafariApnsP12(refVal_setSafariApnsP12);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_apns_p12_password"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_apns_p12_password")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariApnsP12Password;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariApnsP12Password);
            setSafariApnsP12Password(refVal_setSafariApnsP12Password);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_key_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_key_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsKeyId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsKeyId);
            setApnsKeyId(refVal_setApnsKeyId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_team_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_team_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsTeamId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsTeamId);
            setApnsTeamId(refVal_setApnsTeamId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_bundle_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_bundle_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsBundleId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsBundleId);
            setApnsBundleId(refVal_setApnsBundleId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("apns_p8"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("apns_p8")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setApnsP8;
            ok &= ModelBase::fromJson(fieldValue, refVal_setApnsP8);
            setApnsP8(refVal_setApnsP8);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_site_origin"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_site_origin")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariSiteOrigin;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariSiteOrigin);
            setSafariSiteOrigin(refVal_setSafariSiteOrigin);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_push_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_push_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariPushId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariPushId);
            setSafariPushId(refVal_setSafariPushId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_icon_16_16"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_icon_16_16")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariIcon1616;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariIcon1616);
            setSafariIcon1616(refVal_setSafariIcon1616);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_icon_32_32"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_icon_32_32")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariIcon3232;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariIcon3232);
            setSafariIcon3232(refVal_setSafariIcon3232);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_icon_64_64"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_icon_64_64")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariIcon6464;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariIcon6464);
            setSafariIcon6464(refVal_setSafariIcon6464);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_icon_128_128"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_icon_128_128")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariIcon128128;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariIcon128128);
            setSafariIcon128128(refVal_setSafariIcon128128);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("safari_icon_256_256"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("safari_icon_256_256")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSafariIcon256256;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSafariIcon256256);
            setSafariIcon256256(refVal_setSafariIcon256256);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("site_name"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("site_name")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setSiteName;
            ok &= ModelBase::fromJson(fieldValue, refVal_setSiteName);
            setSiteName(refVal_setSiteName);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("basic_auth_key"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("basic_auth_key")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setBasicAuthKey;
            ok &= ModelBase::fromJson(fieldValue, refVal_setBasicAuthKey);
            setBasicAuthKey(refVal_setBasicAuthKey);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("organization_id"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("organization_id")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setOrganizationId;
            ok &= ModelBase::fromJson(fieldValue, refVal_setOrganizationId);
            setOrganizationId(refVal_setOrganizationId);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("additional_data_is_root_payload"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("additional_data_is_root_payload")));
        if(!fieldValue.is_null())
        {
            bool refVal_setAdditionalDataIsRootPayload;
            ok &= ModelBase::fromJson(fieldValue, refVal_setAdditionalDataIsRootPayload);
            setAdditionalDataIsRootPayload(refVal_setAdditionalDataIsRootPayload);
        }
    }
    return ok;
}

void App::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_IdIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("id")), m_Id));
    }
    if(m_NameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("name")), m_Name));
    }
    if(m_PlayersIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("players")), m_Players));
    }
    if(m_Messageable_playersIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("messageable_players")), m_Messageable_players));
    }
    if(m_Updated_atIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("updated_at")), m_Updated_at));
    }
    if(m_Created_atIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("created_at")), m_Created_at));
    }
    if(m_Android_gcm_sender_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("android_gcm_sender_id")), m_Android_gcm_sender_id));
    }
    if(m_Gcm_keyIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("gcm_key")), m_Gcm_key));
    }
    if(m_Chrome_web_originIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("chrome_web_origin")), m_Chrome_web_origin));
    }
    if(m_Chrome_keyIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("chrome_key")), m_Chrome_key));
    }
    if(m_Chrome_web_default_notification_iconIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("chrome_web_default_notification_icon")), m_Chrome_web_default_notification_icon));
    }
    if(m_Chrome_web_sub_domainIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("chrome_web_sub_domain")), m_Chrome_web_sub_domain));
    }
    if(m_Apns_envIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_env")), m_Apns_env));
    }
    if(m_Apns_p12IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_p12")), m_Apns_p12));
    }
    if(m_Apns_p12_passwordIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_p12_password")), m_Apns_p12_password));
    }
    if(m_Apns_certificatesIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_certificates")), m_Apns_certificates));
    }
    if(m_Safari_apns_certificatesIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_apns_certificates")), m_Safari_apns_certificates));
    }
    if(m_Safari_apns_p12IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_apns_p12")), m_Safari_apns_p12));
    }
    if(m_Safari_apns_p12_passwordIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_apns_p12_password")), m_Safari_apns_p12_password));
    }
    if(m_Apns_key_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_key_id")), m_Apns_key_id));
    }
    if(m_Apns_team_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_team_id")), m_Apns_team_id));
    }
    if(m_Apns_bundle_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_bundle_id")), m_Apns_bundle_id));
    }
    if(m_Apns_p8IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("apns_p8")), m_Apns_p8));
    }
    if(m_Safari_site_originIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_site_origin")), m_Safari_site_origin));
    }
    if(m_Safari_push_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_push_id")), m_Safari_push_id));
    }
    if(m_Safari_icon_16_16IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_icon_16_16")), m_Safari_icon_16_16));
    }
    if(m_Safari_icon_32_32IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_icon_32_32")), m_Safari_icon_32_32));
    }
    if(m_Safari_icon_64_64IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_icon_64_64")), m_Safari_icon_64_64));
    }
    if(m_Safari_icon_128_128IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_icon_128_128")), m_Safari_icon_128_128));
    }
    if(m_Safari_icon_256_256IsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("safari_icon_256_256")), m_Safari_icon_256_256));
    }
    if(m_Site_nameIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("site_name")), m_Site_name));
    }
    if(m_Basic_auth_keyIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("basic_auth_key")), m_Basic_auth_key));
    }
    if(m_Organization_idIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("organization_id")), m_Organization_id));
    }
    if(m_Additional_data_is_root_payloadIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("additional_data_is_root_payload")), m_Additional_data_is_root_payload));
    }
}

bool App::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("id"))))
    {
        utility::string_t refVal_setId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("id"))), refVal_setId );
        setId(refVal_setId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("name"))))
    {
        utility::string_t refVal_setName;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("name"))), refVal_setName );
        setName(refVal_setName);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("players"))))
    {
        int32_t refVal_setPlayers;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("players"))), refVal_setPlayers );
        setPlayers(refVal_setPlayers);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("messageable_players"))))
    {
        int32_t refVal_setMessageablePlayers;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("messageable_players"))), refVal_setMessageablePlayers );
        setMessageablePlayers(refVal_setMessageablePlayers);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("updated_at"))))
    {
        utility::datetime refVal_setUpdatedAt;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("updated_at"))), refVal_setUpdatedAt );
        setUpdatedAt(refVal_setUpdatedAt);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("created_at"))))
    {
        utility::datetime refVal_setCreatedAt;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("created_at"))), refVal_setCreatedAt );
        setCreatedAt(refVal_setCreatedAt);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("android_gcm_sender_id"))))
    {
        utility::string_t refVal_setAndroidGcmSenderId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("android_gcm_sender_id"))), refVal_setAndroidGcmSenderId );
        setAndroidGcmSenderId(refVal_setAndroidGcmSenderId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("gcm_key"))))
    {
        utility::string_t refVal_setGcmKey;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("gcm_key"))), refVal_setGcmKey );
        setGcmKey(refVal_setGcmKey);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("chrome_web_origin"))))
    {
        utility::string_t refVal_setChromeWebOrigin;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("chrome_web_origin"))), refVal_setChromeWebOrigin );
        setChromeWebOrigin(refVal_setChromeWebOrigin);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("chrome_key"))))
    {
        utility::string_t refVal_setChromeKey;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("chrome_key"))), refVal_setChromeKey );
        setChromeKey(refVal_setChromeKey);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("chrome_web_default_notification_icon"))))
    {
        utility::string_t refVal_setChromeWebDefaultNotificationIcon;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("chrome_web_default_notification_icon"))), refVal_setChromeWebDefaultNotificationIcon );
        setChromeWebDefaultNotificationIcon(refVal_setChromeWebDefaultNotificationIcon);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("chrome_web_sub_domain"))))
    {
        utility::string_t refVal_setChromeWebSubDomain;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("chrome_web_sub_domain"))), refVal_setChromeWebSubDomain );
        setChromeWebSubDomain(refVal_setChromeWebSubDomain);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_env"))))
    {
        utility::string_t refVal_setApnsEnv;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_env"))), refVal_setApnsEnv );
        setApnsEnv(refVal_setApnsEnv);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_p12"))))
    {
        utility::string_t refVal_setApnsP12;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_p12"))), refVal_setApnsP12 );
        setApnsP12(refVal_setApnsP12);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_p12_password"))))
    {
        utility::string_t refVal_setApnsP12Password;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_p12_password"))), refVal_setApnsP12Password );
        setApnsP12Password(refVal_setApnsP12Password);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_certificates"))))
    {
        utility::string_t refVal_setApnsCertificates;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_certificates"))), refVal_setApnsCertificates );
        setApnsCertificates(refVal_setApnsCertificates);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_apns_certificates"))))
    {
        utility::string_t refVal_setSafariApnsCertificates;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_apns_certificates"))), refVal_setSafariApnsCertificates );
        setSafariApnsCertificates(refVal_setSafariApnsCertificates);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_apns_p12"))))
    {
        utility::string_t refVal_setSafariApnsP12;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_apns_p12"))), refVal_setSafariApnsP12 );
        setSafariApnsP12(refVal_setSafariApnsP12);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_apns_p12_password"))))
    {
        utility::string_t refVal_setSafariApnsP12Password;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_apns_p12_password"))), refVal_setSafariApnsP12Password );
        setSafariApnsP12Password(refVal_setSafariApnsP12Password);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_key_id"))))
    {
        utility::string_t refVal_setApnsKeyId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_key_id"))), refVal_setApnsKeyId );
        setApnsKeyId(refVal_setApnsKeyId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_team_id"))))
    {
        utility::string_t refVal_setApnsTeamId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_team_id"))), refVal_setApnsTeamId );
        setApnsTeamId(refVal_setApnsTeamId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_bundle_id"))))
    {
        utility::string_t refVal_setApnsBundleId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_bundle_id"))), refVal_setApnsBundleId );
        setApnsBundleId(refVal_setApnsBundleId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("apns_p8"))))
    {
        utility::string_t refVal_setApnsP8;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("apns_p8"))), refVal_setApnsP8 );
        setApnsP8(refVal_setApnsP8);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_site_origin"))))
    {
        utility::string_t refVal_setSafariSiteOrigin;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_site_origin"))), refVal_setSafariSiteOrigin );
        setSafariSiteOrigin(refVal_setSafariSiteOrigin);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_push_id"))))
    {
        utility::string_t refVal_setSafariPushId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_push_id"))), refVal_setSafariPushId );
        setSafariPushId(refVal_setSafariPushId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_icon_16_16"))))
    {
        utility::string_t refVal_setSafariIcon1616;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_icon_16_16"))), refVal_setSafariIcon1616 );
        setSafariIcon1616(refVal_setSafariIcon1616);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_icon_32_32"))))
    {
        utility::string_t refVal_setSafariIcon3232;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_icon_32_32"))), refVal_setSafariIcon3232 );
        setSafariIcon3232(refVal_setSafariIcon3232);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_icon_64_64"))))
    {
        utility::string_t refVal_setSafariIcon6464;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_icon_64_64"))), refVal_setSafariIcon6464 );
        setSafariIcon6464(refVal_setSafariIcon6464);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_icon_128_128"))))
    {
        utility::string_t refVal_setSafariIcon128128;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_icon_128_128"))), refVal_setSafariIcon128128 );
        setSafariIcon128128(refVal_setSafariIcon128128);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("safari_icon_256_256"))))
    {
        utility::string_t refVal_setSafariIcon256256;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("safari_icon_256_256"))), refVal_setSafariIcon256256 );
        setSafariIcon256256(refVal_setSafariIcon256256);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("site_name"))))
    {
        utility::string_t refVal_setSiteName;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("site_name"))), refVal_setSiteName );
        setSiteName(refVal_setSiteName);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("basic_auth_key"))))
    {
        utility::string_t refVal_setBasicAuthKey;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("basic_auth_key"))), refVal_setBasicAuthKey );
        setBasicAuthKey(refVal_setBasicAuthKey);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("organization_id"))))
    {
        utility::string_t refVal_setOrganizationId;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("organization_id"))), refVal_setOrganizationId );
        setOrganizationId(refVal_setOrganizationId);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("additional_data_is_root_payload"))))
    {
        bool refVal_setAdditionalDataIsRootPayload;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("additional_data_is_root_payload"))), refVal_setAdditionalDataIsRootPayload );
        setAdditionalDataIsRootPayload(refVal_setAdditionalDataIsRootPayload);
    }
    return ok;
}

utility::string_t App::getId() const
{
    return m_Id;
}

void App::setId(const utility::string_t& value)
{
    m_Id = value;
    m_IdIsSet = true;
}

bool App::idIsSet() const
{
    return m_IdIsSet;
}

void App::unsetId()
{
    m_IdIsSet = false;
}
utility::string_t App::getName() const
{
    return m_Name;
}

void App::setName(const utility::string_t& value)
{
    m_Name = value;
    m_NameIsSet = true;
}

bool App::nameIsSet() const
{
    return m_NameIsSet;
}

void App::unsetName()
{
    m_NameIsSet = false;
}
int32_t App::getPlayers() const
{
    return m_Players;
}

void App::setPlayers(int32_t value)
{
    m_Players = value;
    m_PlayersIsSet = true;
}

bool App::playersIsSet() const
{
    return m_PlayersIsSet;
}

void App::unsetPlayers()
{
    m_PlayersIsSet = false;
}
int32_t App::getMessageablePlayers() const
{
    return m_Messageable_players;
}

void App::setMessageablePlayers(int32_t value)
{
    m_Messageable_players = value;
    m_Messageable_playersIsSet = true;
}

bool App::messageablePlayersIsSet() const
{
    return m_Messageable_playersIsSet;
}

void App::unsetMessageable_players()
{
    m_Messageable_playersIsSet = false;
}
utility::datetime App::getUpdatedAt() const
{
    return m_Updated_at;
}

void App::setUpdatedAt(const utility::datetime& value)
{
    m_Updated_at = value;
    m_Updated_atIsSet = true;
}

bool App::updatedAtIsSet() const
{
    return m_Updated_atIsSet;
}

void App::unsetUpdated_at()
{
    m_Updated_atIsSet = false;
}
utility::datetime App::getCreatedAt() const
{
    return m_Created_at;
}

void App::setCreatedAt(const utility::datetime& value)
{
    m_Created_at = value;
    m_Created_atIsSet = true;
}

bool App::createdAtIsSet() const
{
    return m_Created_atIsSet;
}

void App::unsetCreated_at()
{
    m_Created_atIsSet = false;
}
utility::string_t App::getAndroidGcmSenderId() const
{
    return m_Android_gcm_sender_id;
}

void App::setAndroidGcmSenderId(const utility::string_t& value)
{
    m_Android_gcm_sender_id = value;
    m_Android_gcm_sender_idIsSet = true;
}

bool App::androidGcmSenderIdIsSet() const
{
    return m_Android_gcm_sender_idIsSet;
}

void App::unsetAndroid_gcm_sender_id()
{
    m_Android_gcm_sender_idIsSet = false;
}
utility::string_t App::getGcmKey() const
{
    return m_Gcm_key;
}

void App::setGcmKey(const utility::string_t& value)
{
    m_Gcm_key = value;
    m_Gcm_keyIsSet = true;
}

bool App::gcmKeyIsSet() const
{
    return m_Gcm_keyIsSet;
}

void App::unsetGcm_key()
{
    m_Gcm_keyIsSet = false;
}
utility::string_t App::getChromeWebOrigin() const
{
    return m_Chrome_web_origin;
}

void App::setChromeWebOrigin(const utility::string_t& value)
{
    m_Chrome_web_origin = value;
    m_Chrome_web_originIsSet = true;
}

bool App::chromeWebOriginIsSet() const
{
    return m_Chrome_web_originIsSet;
}

void App::unsetChrome_web_origin()
{
    m_Chrome_web_originIsSet = false;
}
utility::string_t App::getChromeKey() const
{
    return m_Chrome_key;
}

void App::setChromeKey(const utility::string_t& value)
{
    m_Chrome_key = value;
    m_Chrome_keyIsSet = true;
}

bool App::chromeKeyIsSet() const
{
    return m_Chrome_keyIsSet;
}

void App::unsetChrome_key()
{
    m_Chrome_keyIsSet = false;
}
utility::string_t App::getChromeWebDefaultNotificationIcon() const
{
    return m_Chrome_web_default_notification_icon;
}

void App::setChromeWebDefaultNotificationIcon(const utility::string_t& value)
{
    m_Chrome_web_default_notification_icon = value;
    m_Chrome_web_default_notification_iconIsSet = true;
}

bool App::chromeWebDefaultNotificationIconIsSet() const
{
    return m_Chrome_web_default_notification_iconIsSet;
}

void App::unsetChrome_web_default_notification_icon()
{
    m_Chrome_web_default_notification_iconIsSet = false;
}
utility::string_t App::getChromeWebSubDomain() const
{
    return m_Chrome_web_sub_domain;
}

void App::setChromeWebSubDomain(const utility::string_t& value)
{
    m_Chrome_web_sub_domain = value;
    m_Chrome_web_sub_domainIsSet = true;
}

bool App::chromeWebSubDomainIsSet() const
{
    return m_Chrome_web_sub_domainIsSet;
}

void App::unsetChrome_web_sub_domain()
{
    m_Chrome_web_sub_domainIsSet = false;
}
utility::string_t App::getApnsEnv() const
{
    return m_Apns_env;
}

void App::setApnsEnv(const utility::string_t& value)
{
    m_Apns_env = value;
    m_Apns_envIsSet = true;
}

bool App::apnsEnvIsSet() const
{
    return m_Apns_envIsSet;
}

void App::unsetApns_env()
{
    m_Apns_envIsSet = false;
}
utility::string_t App::getApnsP12() const
{
    return m_Apns_p12;
}

void App::setApnsP12(const utility::string_t& value)
{
    m_Apns_p12 = value;
    m_Apns_p12IsSet = true;
}

bool App::apnsP12IsSet() const
{
    return m_Apns_p12IsSet;
}

void App::unsetApns_p12()
{
    m_Apns_p12IsSet = false;
}
utility::string_t App::getApnsP12Password() const
{
    return m_Apns_p12_password;
}

void App::setApnsP12Password(const utility::string_t& value)
{
    m_Apns_p12_password = value;
    m_Apns_p12_passwordIsSet = true;
}

bool App::apnsP12PasswordIsSet() const
{
    return m_Apns_p12_passwordIsSet;
}

void App::unsetApns_p12_password()
{
    m_Apns_p12_passwordIsSet = false;
}
utility::string_t App::getApnsCertificates() const
{
    return m_Apns_certificates;
}

void App::setApnsCertificates(const utility::string_t& value)
{
    m_Apns_certificates = value;
    m_Apns_certificatesIsSet = true;
}

bool App::apnsCertificatesIsSet() const
{
    return m_Apns_certificatesIsSet;
}

void App::unsetApns_certificates()
{
    m_Apns_certificatesIsSet = false;
}
utility::string_t App::getSafariApnsCertificates() const
{
    return m_Safari_apns_certificates;
}

void App::setSafariApnsCertificates(const utility::string_t& value)
{
    m_Safari_apns_certificates = value;
    m_Safari_apns_certificatesIsSet = true;
}

bool App::safariApnsCertificatesIsSet() const
{
    return m_Safari_apns_certificatesIsSet;
}

void App::unsetSafari_apns_certificates()
{
    m_Safari_apns_certificatesIsSet = false;
}
utility::string_t App::getSafariApnsP12() const
{
    return m_Safari_apns_p12;
}

void App::setSafariApnsP12(const utility::string_t& value)
{
    m_Safari_apns_p12 = value;
    m_Safari_apns_p12IsSet = true;
}

bool App::safariApnsP12IsSet() const
{
    return m_Safari_apns_p12IsSet;
}

void App::unsetSafari_apns_p12()
{
    m_Safari_apns_p12IsSet = false;
}
utility::string_t App::getSafariApnsP12Password() const
{
    return m_Safari_apns_p12_password;
}

void App::setSafariApnsP12Password(const utility::string_t& value)
{
    m_Safari_apns_p12_password = value;
    m_Safari_apns_p12_passwordIsSet = true;
}

bool App::safariApnsP12PasswordIsSet() const
{
    return m_Safari_apns_p12_passwordIsSet;
}

void App::unsetSafari_apns_p12_password()
{
    m_Safari_apns_p12_passwordIsSet = false;
}
utility::string_t App::getApnsKeyId() const
{
    return m_Apns_key_id;
}

void App::setApnsKeyId(const utility::string_t& value)
{
    m_Apns_key_id = value;
    m_Apns_key_idIsSet = true;
}

bool App::apnsKeyIdIsSet() const
{
    return m_Apns_key_idIsSet;
}

void App::unsetApns_key_id()
{
    m_Apns_key_idIsSet = false;
}
utility::string_t App::getApnsTeamId() const
{
    return m_Apns_team_id;
}

void App::setApnsTeamId(const utility::string_t& value)
{
    m_Apns_team_id = value;
    m_Apns_team_idIsSet = true;
}

bool App::apnsTeamIdIsSet() const
{
    return m_Apns_team_idIsSet;
}

void App::unsetApns_team_id()
{
    m_Apns_team_idIsSet = false;
}
utility::string_t App::getApnsBundleId() const
{
    return m_Apns_bundle_id;
}

void App::setApnsBundleId(const utility::string_t& value)
{
    m_Apns_bundle_id = value;
    m_Apns_bundle_idIsSet = true;
}

bool App::apnsBundleIdIsSet() const
{
    return m_Apns_bundle_idIsSet;
}

void App::unsetApns_bundle_id()
{
    m_Apns_bundle_idIsSet = false;
}
utility::string_t App::getApnsP8() const
{
    return m_Apns_p8;
}

void App::setApnsP8(const utility::string_t& value)
{
    m_Apns_p8 = value;
    m_Apns_p8IsSet = true;
}

bool App::apnsP8IsSet() const
{
    return m_Apns_p8IsSet;
}

void App::unsetApns_p8()
{
    m_Apns_p8IsSet = false;
}
utility::string_t App::getSafariSiteOrigin() const
{
    return m_Safari_site_origin;
}

void App::setSafariSiteOrigin(const utility::string_t& value)
{
    m_Safari_site_origin = value;
    m_Safari_site_originIsSet = true;
}

bool App::safariSiteOriginIsSet() const
{
    return m_Safari_site_originIsSet;
}

void App::unsetSafari_site_origin()
{
    m_Safari_site_originIsSet = false;
}
utility::string_t App::getSafariPushId() const
{
    return m_Safari_push_id;
}

void App::setSafariPushId(const utility::string_t& value)
{
    m_Safari_push_id = value;
    m_Safari_push_idIsSet = true;
}

bool App::safariPushIdIsSet() const
{
    return m_Safari_push_idIsSet;
}

void App::unsetSafari_push_id()
{
    m_Safari_push_idIsSet = false;
}
utility::string_t App::getSafariIcon1616() const
{
    return m_Safari_icon_16_16;
}

void App::setSafariIcon1616(const utility::string_t& value)
{
    m_Safari_icon_16_16 = value;
    m_Safari_icon_16_16IsSet = true;
}

bool App::safariIcon1616IsSet() const
{
    return m_Safari_icon_16_16IsSet;
}

void App::unsetSafari_icon_16_16()
{
    m_Safari_icon_16_16IsSet = false;
}
utility::string_t App::getSafariIcon3232() const
{
    return m_Safari_icon_32_32;
}

void App::setSafariIcon3232(const utility::string_t& value)
{
    m_Safari_icon_32_32 = value;
    m_Safari_icon_32_32IsSet = true;
}

bool App::safariIcon3232IsSet() const
{
    return m_Safari_icon_32_32IsSet;
}

void App::unsetSafari_icon_32_32()
{
    m_Safari_icon_32_32IsSet = false;
}
utility::string_t App::getSafariIcon6464() const
{
    return m_Safari_icon_64_64;
}

void App::setSafariIcon6464(const utility::string_t& value)
{
    m_Safari_icon_64_64 = value;
    m_Safari_icon_64_64IsSet = true;
}

bool App::safariIcon6464IsSet() const
{
    return m_Safari_icon_64_64IsSet;
}

void App::unsetSafari_icon_64_64()
{
    m_Safari_icon_64_64IsSet = false;
}
utility::string_t App::getSafariIcon128128() const
{
    return m_Safari_icon_128_128;
}

void App::setSafariIcon128128(const utility::string_t& value)
{
    m_Safari_icon_128_128 = value;
    m_Safari_icon_128_128IsSet = true;
}

bool App::safariIcon128128IsSet() const
{
    return m_Safari_icon_128_128IsSet;
}

void App::unsetSafari_icon_128_128()
{
    m_Safari_icon_128_128IsSet = false;
}
utility::string_t App::getSafariIcon256256() const
{
    return m_Safari_icon_256_256;
}

void App::setSafariIcon256256(const utility::string_t& value)
{
    m_Safari_icon_256_256 = value;
    m_Safari_icon_256_256IsSet = true;
}

bool App::safariIcon256256IsSet() const
{
    return m_Safari_icon_256_256IsSet;
}

void App::unsetSafari_icon_256_256()
{
    m_Safari_icon_256_256IsSet = false;
}
utility::string_t App::getSiteName() const
{
    return m_Site_name;
}

void App::setSiteName(const utility::string_t& value)
{
    m_Site_name = value;
    m_Site_nameIsSet = true;
}

bool App::siteNameIsSet() const
{
    return m_Site_nameIsSet;
}

void App::unsetSite_name()
{
    m_Site_nameIsSet = false;
}
utility::string_t App::getBasicAuthKey() const
{
    return m_Basic_auth_key;
}

void App::setBasicAuthKey(const utility::string_t& value)
{
    m_Basic_auth_key = value;
    m_Basic_auth_keyIsSet = true;
}

bool App::basicAuthKeyIsSet() const
{
    return m_Basic_auth_keyIsSet;
}

void App::unsetBasic_auth_key()
{
    m_Basic_auth_keyIsSet = false;
}
utility::string_t App::getOrganizationId() const
{
    return m_Organization_id;
}

void App::setOrganizationId(const utility::string_t& value)
{
    m_Organization_id = value;
    m_Organization_idIsSet = true;
}

bool App::organizationIdIsSet() const
{
    return m_Organization_idIsSet;
}

void App::unsetOrganization_id()
{
    m_Organization_idIsSet = false;
}
bool App::isAdditionalDataIsRootPayload() const
{
    return m_Additional_data_is_root_payload;
}

void App::setAdditionalDataIsRootPayload(bool value)
{
    m_Additional_data_is_root_payload = value;
    m_Additional_data_is_root_payloadIsSet = true;
}

bool App::additionalDataIsRootPayloadIsSet() const
{
    return m_Additional_data_is_root_payloadIsSet;
}

void App::unsetAdditional_data_is_root_payload()
{
    m_Additional_data_is_root_payloadIsSet = false;
}
}
}
}
}


